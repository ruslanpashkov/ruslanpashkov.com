---
import { getCollection, render } from 'astro:content';
import Layout from '@/layouts/Layout.astro';
import ArticleLayout from '@/layouts/ArticleLayout.astro';
import Breadcrumbs from '@/components/shared/Breadcrumbs.astro';
import { generateTitle, getArticleSchema, getBreadcrumbsSchema } from '@/utils/seo';
import type { Article } from '@/types/Article';
import type { Link } from '@/types/Link';

interface Props {
	article: Article;
}

export async function getStaticPaths() {
	const articles = await getCollection('blog');

	return articles.map((article) => ({
		params: { slug: article.data.slug },
		props: { article },
	}));
}

const { article } = Astro.props;

const { slug, title, description } = article.data;

const {
	Content,
	headings,
	remarkPluginFrontmatter: { minutesRead },
} = await render(article);

const pageTitle = generateTitle(title);

const currentPath = Astro.url.pathname;

const breadcrumbs: Link[] = [
	{ title: 'Home', url: '/' },
	{ title: 'Blog', url: '/blog/' },
	{ title, url: currentPath },
];

const articleSchema = getArticleSchema(Astro.url, article);
const breadcrumbsSchema = getBreadcrumbsSchema(Astro.url, breadcrumbs);
---

<Layout
	article={article}
	cover={`${slug}.png`}
	description={description}
	schemas={[articleSchema, breadcrumbsSchema]}
	title={pageTitle}
	type="article"
>
	<div class="container container--spaced" data-testid="blog-article-page-container">
		<Breadcrumbs breadcrumbs={breadcrumbs} />

		<ArticleLayout article={article} headings={headings} minutesRead={minutesRead}>
			<Content />
		</ArticleLayout>
	</div>
</Layout>
