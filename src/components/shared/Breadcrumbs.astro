---
import { Icon } from 'astro-icon/components';
import type { Link } from '@/types/Link';

interface Props {
	breadcrumbs: Link[];
}

const { breadcrumbs } = Astro.props;
---

<nav aria-label="Breadcrumbs" class="breadcrumbs" data-testid="breadcrumbs" id="breadcrumbs">
	<ol class="breadcrumbs__list" data-testid="breadcrumbs-list" id="breadcrumbs-list">
		{
			breadcrumbs.map((crumb, index) => {
				const isLast = index === breadcrumbs.length - 1;

				return (
					<li class="breadcrumbs__item" data-testid="breadcrumbs-item">
						{isLast ? (
							<span
								aria-current="page"
								class="breadcrumbs__label"
								data-testid="breadcrumbs-current"
							>
								{crumb.title}
							</span>
						) : (
							<a
								class="breadcrumbs__label breadcrumbs__link hover"
								data-testid="breadcrumbs-link"
								href={crumb.url}
							>
								{crumb.title}
							</a>
						)}

						{!isLast && (
							<Icon
								aria-hidden="true"
								class="breadcrumbs__separator"
								data-testid="breadcrumbs-separator"
								name="chevron-down"
							/>
						)}
					</li>
				);
			})
		}
	</ol>
</nav>

<style>
	.breadcrumbs {
		--crumbs-spacing: 12px;

		position: relative;
		overflow: hidden;
	}

	.breadcrumbs::before,
	.breadcrumbs::after {
		content: '';
		position: absolute;
		top: 0;
		width: 48px;
		height: 100%;
		visibility: hidden;
		opacity: 0;
		background-color: var(--color-primary);

		@media (prefers-reduced-motion: no-preference) {
			transition:
				visibility var(--motion-duration) ease-in-out,
				opacity var(--motion-duration) ease-in-out;
		}
	}

	.breadcrumbs::before {
		left: 0;
		mask-image: linear-gradient(to left, transparent, black 90%);
	}

	.breadcrumbs::after {
		right: 0;
		mask-image: linear-gradient(to right, transparent, black 90%);
	}

	.breadcrumbs.show-start-fade::before,
	.breadcrumbs.show-end-fade::after {
		visibility: visible;
		opacity: 1;
	}

	.breadcrumbs__list {
		scrollbar-width: none;
		scroll-snap-type: x mandatory;
		overflow-x: auto;
		display: flex;
		gap: var(--crumbs-spacing);
		align-items: center;
	}

	.breadcrumbs__item {
		scroll-snap-align: start;
		display: flex;
		gap: var(--crumbs-spacing);
		align-items: center;
		white-space: nowrap;
	}

	.breadcrumbs__label {
		padding-block: 0.5em;
		font-size: 1.125rem;
	}

	.breadcrumbs__link:focus-visible {
		--offset-width: -2px;

		border-radius: 6px;
		outline: 2px solid var(--color-focus);
		outline-offset: var(--offset-width);
	}

	.breadcrumbs__separator {
		transform: rotate(-90deg);
		max-width: max-content;
		color: var(--color-neutral);
	}
</style>

<script src="@/scripts/crumbs.ts"></script>
