---
import { Icon } from 'astro-icon/components';
import { menu } from '@/data/menu';

const currentPath = Astro.url.pathname;
---

<div class="menu menu--closed" data-testid="menu" id="menu">
	<nav aria-label="Main" class="menu__navigation" data-testid="menu-navigation" id="navigation">
		<ul class="menu__list" data-testid="menu-list">
			{
				menu.map(({ title, url }) => {
					const isSelected = url === currentPath;

					return (
						<li data-testid="menu-item">
							{isSelected ? (
								<span
									aria-current="page"
									class="menu__link menu__link--selected"
									data-testid="menu-link-selected"
								>
									{title}
								</span>
							) : (
								<a class="menu__link hover" data-testid="menu-link" href={url}>
									{title}
								</a>
							)}
						</li>
					);
				})
			}
		</ul>
	</nav>

	<a class="action menu__feed" data-testid="menu-rss-feed" href="/rss.xml" id="feed">
		<span class="action__icon" data-testid="menu-rss-icon">
			<Icon aria-hidden="true" name="rss" size={16} />
		</span>

		<span class="action__label" data-testid="menu-rss-label">RSS</span>
	</a>

	<button
		aria-label="Use dark theme"
		class="action menu__theme-toggler"
		data-testid="menu-theme-toggler"
		id="theme-toggler"
		type="button"
	>
		<span class="action__icon" data-testid="menu-theme-icon">
			<Icon aria-hidden="true" name="sun" size={22} />
		</span>

		<span class="action__label" data-testid="menu-theme-label">Light</span>
	</button>
</div>

<style>
	.menu {
		@media (width < 1024px) {
			position: fixed;
			z-index: var(--z-index-menu);
			inset: 0;
			transform: translateX(-100%);
			display: grid;
			grid-template-rows:
				max-content
				1fr
				max-content;
			gap: 40px;
			margin-top: var(--header-min-height);
			padding: 20px;
			background-color: var(--color-primary);

			@media (prefers-reduced-motion: no-preference) {
				transition: transform var(--motion-duration) ease-in-out;
			}
		}

		@media (width >= 64rem) {
			display: grid;
			grid-template-columns:
				1fr
				max-content
				max-content;
			gap: 40px;
			width: 100%;
		}
	}

	@media (width < 1024px) {
		.menu--closed {
			display: none;
		}

		.menu--open {
			transform: translateX(0);
		}
	}

	.menu__navigation {
		display: flex;
		justify-content: center;

		@media (width >= 64rem) {
			justify-content: start;
		}
	}

	.menu__list {
		display: flex;
		flex-direction: column;
		gap: 40px;
		place-self: center;
		align-items: center;

		@media (width >= 64rem) {
			flex-direction: row;
		}

		@media (height < 512px) {
			flex-direction: row;
		}
	}

	.menu__link {
		padding: 0.5em;
		font-size: 1.25rem;
		text-wrap: nowrap;
	}

	.menu__link--selected {
		color: var(--color-contrast);
	}

	.menu__feed {
		justify-self: end;
		order: -1;

		@media (width >= 64rem) {
			order: 0;
		}
	}

	.menu__theme-toggler {
		justify-content: center;
		justify-self: center;
		min-width: 125px;
	}

	.action {
		display: flex;
		gap: 8px;
		align-items: center;
		padding: 0.5em;
	}

	.action__icon {
		--icon-size: 24px;

		display: flex;
		align-items: center;
		justify-content: center;
		width: var(--icon-size);
		height: var(--icon-size);
	}

	.action__label {
		font-size: 1.25rem;
	}
</style>

<script src="@/scripts/theme.ts"></script>
